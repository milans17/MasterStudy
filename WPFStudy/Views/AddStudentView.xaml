<Window x:Class="WPFStudy.AddStudentView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFStudy"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:WPFStudy.Converters"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Student Details" Height="380" Width="350" x:Name="InsertStudent">

    <Window.Resources>
        <converters:BoolToIntConverter x:Key="BoolToIntConverter"/>
    </Window.Resources>
    
    <Grid Margin="10 10 10 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <GroupBox Grid.Row="0" Header="Student Info" Margin="4 4 4 4" BorderBrush="ForestGreen" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="1" Grid.Column="0" Content="Name and Surname:" HorizontalContentAlignment="Right" Target="{Binding ElementName=txtName}"/>
                <TextBox x:Name="txtName" Grid.Row="1" Grid.Column="1" Margin="2 2 2 2"
                         Text="{Binding StudentName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                         Validation.ErrorTemplate="{StaticResource ErrorTemplateSilverlightStyle}"/>

                <Label Grid.Row="2" Grid.Column="0" Content="Department:" HorizontalContentAlignment="Right"/>
                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="cbxDepartments" Margin="2 2 2 2" ItemsSource="{Binding Departments}"
                      DisplayMemberPath="Name" SelectedValuePath="DepartmentId" 
                      SelectedValue="{Binding Path=DepartmentId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Grid.Row="3" Grid.Column="0" Content="Study Program:" HorizontalContentAlignment="Right"/>
                <ComboBox Grid.Row="3" Grid.Column="1" x:Name="cbxStudyPrograms" Margin="2 2 2 2"
                      DisplayMemberPath="Name" SelectedValuePath="StudyProgramId" 
                      SelectedValue="{Binding Path=StudyProgramId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Grid.Row="4" Content="Address:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <TextBox x:Name="txtAddress" Grid.Row="4" Grid.Column="1" Margin="2 2 2 2" Text="{Binding Address}"/>

                <Label Grid.Row="5" Content="Birth Place:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <TextBox x:Name="txtBirthPlace" Grid.Row="5" Grid.Column="1" Margin="2 2 2 2" 
                         Text="{Binding BirthPlace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource ErrorTemplateSilverlightStyle}"/>

                <Label Grid.Row="6" Content="Birth Date:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <DatePicker Grid.Row="6" Grid.Column="1" Margin="2 2 2 2" SelectedDate="{Binding Path=BirthDate, Mode=TwoWay}">
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBox x:Name="PART_TextBox" 
                                                Text="{Binding Path=SelectedDate, 
                                                        RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, 
                                                        StringFormat={}{0:dd/MM/yyyy}}" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>

                <Label Grid.Row="7" Content="Phone:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <TextBox x:Name="txtPhone" Grid.Row="7" Grid.Column="1" Margin="2 2 2 2"
                         Text="{Binding Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource ErrorTemplateSilverlightStyle}"/>

                <Label Grid.Row="8" Content="Study Year:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="1" Margin="2 2 2 2">
                    <RadioButton Content="1" GroupName="year" Margin="0 2 7 2" 
                                 IsChecked="{Binding Path=StudyYear, Converter={StaticResource BoolToIntConverter}, ConverterParameter=1}"/>
                    <RadioButton Content="2" GroupName="year" Margin="0 2 7 2"
                                 IsChecked="{Binding Path=StudyYear, Converter={StaticResource BoolToIntConverter}, ConverterParameter=2}"/>
                    <RadioButton Content="3" GroupName="year" Margin="0 2 7 2"
                                 IsChecked="{Binding Path=StudyYear, Converter={StaticResource BoolToIntConverter}, ConverterParameter=3}"/>
                    <RadioButton Content="4" GroupName="year" Margin="0 2 7 2"
                                 IsChecked="{Binding Path=StudyYear, Converter={StaticResource BoolToIntConverter}, ConverterParameter=4}"/>
                </StackPanel>

                <Label Grid.Row="9" Content="Balance:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <TextBox x:Name="txtBalance" Grid.Row="9" Grid.Column="1" Margin="2 2 2 2"
                         Text="{Binding Balance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         Validation.ErrorTemplate="{StaticResource ErrorTemplateSilverlightStyle}"/>

                <!--<Label Grid.Row="10" Content="Username:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <TextBox x:Name="txtUsername" Grid.Row="10" Grid.Column="1" Text="{Binding Username}"/>

                <Label Grid.Row="11" Content="Password:" Grid.Column="0" HorizontalContentAlignment="Right"/>
                <TextBox x:Name="txtPassword" Grid.Row="11" Grid.Column="1" Text="{Binding Password}"/>-->
            </Grid>
        </GroupBox>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Save" Command="{Binding Save}" Margin="0,10,20,5" Width="60" Height="25">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtName}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtBirthPlace}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtPhone}" Value="False"/>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtBalance}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                
                                <Setter Property="IsEnabled" Value="True"/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Content="Cancel" Command="{Binding Cancel}" Margin="0,10,5,5" Width="60" Height="25"/>
        </StackPanel>
    </Grid>
</Window>
